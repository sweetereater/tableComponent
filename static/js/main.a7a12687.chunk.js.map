{"version":3,"sources":["Components/ButtonPanel/ButtonPanel.module.css","Components/Table/Table.module.css","Components/App.module.css","Components/InputFilter/InputFilter.module.css","Components/Table/TableHead/TableHead.module.css","Components/Table/TableBody/TableRow.module.css","data.js","Components/ButtonPanel/ButtonPanel.js","Components/InputFilter/InputFilter.js","Components/Table/TableHead/TableHead.js","Components/Table/TableBody/TableRow.js","Components/Table/TableBody/TableBody.js","Components/Table/Table.js","Components/App.js","index.js"],"names":["module","exports","randomNames","hobbies","data","i","push","id","name","Math","floor","random","length","hobby","age","ButtonPanel","props","currentPage","totalPages","handleClick","className","s","paginationPanel","page","step","maxPage","result","createPaginationButtons","map","item","paginationButtonClasses","paginationButton","activePage","onClick","InputFilter","value","handleChange","inputFilter","onChange","placeholder","TableHead","columns","currentSort","order","tableHeadWidth","tableHeadCell","style","width","CaretUpOutlined","CaretDownOutlined","TableRow","Object","keys","key","tableCell","TableBody","content","Table","head","tableContainer","table","App","useState","window","innerHeight","height","setHeight","useEffect","addEventListener","prevHeight","abs","sortBy","setSortBy","setOrder","filter","setFilter","setPage","filteredData","sort","item1","item2","values","join","toLowerCase","includes","headerHeight","buttonsPanelHeight","rowsPerPage","visibleData","slice","ceil","container","header","event","target","prevItem","prevOrder","prevPage","ReactDOM","render","dataArray","document","getElementById"],"mappings":"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","file":"static/js/main.a7a12687.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginationPanel\":\"ButtonPanel_paginationPanel__3e6Ig\",\"paginationButton\":\"ButtonPanel_paginationButton__Cm2Cz\",\"activePage\":\"ButtonPanel_activePage__19Eza\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableContainer\":\"Table_tableContainer__1UjAp\",\"table\":\"Table_table__zwjQG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3nXzh\",\"header\":\"App_header__YyHwh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputFilter\":\"InputFilter_inputFilter__3sW8u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableHeadCell\":\"TableHead_tableHeadCell__cW-v2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableCell\":\"TableRow_tableCell__8N01X\"};","const randomNames = [\r\n    \"Oleg\",\r\n    \"Fedor\",\r\n    \"Svetlana\",\r\n    \"Anton\",\r\n    \"Evgeniy\",\r\n    \"Darya\",\r\n    \"Olga\",\r\n    \"Ekaterina\",\r\n    \"Pavel\",\r\n    \"Petr\",\r\n    \"Antonio\",\r\n    \"Evgeniya\",\r\n    \"Viktoriya\",\r\n    \"Viktor\"\r\n];\r\n\r\nconst hobbies = [\r\n    \"Music\",\r\n    \"Books\",\r\n    \"Sport\",\r\n    \"Travelling\",\r\n    \"Beauty\",\r\n    \"Science\",\r\n    \"Web programming\"\r\n]\r\n\r\nconst data = [];\r\n\r\nconst createObject = (index) => {\r\n    let name = randomNames[Math.floor(Math.random() * randomNames.length)];\r\n    return {\r\n        id: index,\r\n        name: name,\r\n        hobby: hobbies[Math.floor(Math.random() * hobbies.length)],\r\n        age: Math.floor(Math.random() * 30) + 18,\r\n        // gender: name.endsWith('a') ? 'female' : 'male'\r\n    }\r\n}\r\n\r\nfor (let i = 0; i < 280; i++) {\r\n    data.push(createObject(i + 1));\r\n}\r\n\r\nexport default data;","import React from 'react';\r\nimport s from './ButtonPanel.module.css';\r\n\r\n\r\n\r\nconst createPaginationButtons = (page, step, maxPage) => {\r\n    const result = [];\r\n    for (let i = page - step; i <= page + step; i++) {\r\n        if (i > 0 && i <= maxPage) {\r\n            result.push(i);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\n\r\n\r\nconst ButtonPanel = (props) => {\r\n\r\n    const { currentPage, totalPages, handleClick } = props;\r\n\r\n    const getPaginationButtons = () => {\r\n        return (\r\n            createPaginationButtons(currentPage, 2, totalPages).map(item => {\r\n\r\n                let paginationButtonClasses = (currentPage === item) ? `${s.paginationButton}` : `${s.paginationButton} ${s.activePage}`;\r\n\r\n                return <button\r\n                    key={item}\r\n                    className={paginationButtonClasses}\r\n                    onClick={() => handleClick(item)}\r\n                >\r\n                    {item}\r\n                </button>\r\n            })\r\n        )\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.paginationPanel}>\r\n            {getPaginationButtons()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ButtonPanel;","import React from 'react';\r\nimport s from './InputFilter.module.css'\r\n\r\nconst InputFilter = ({ value, handleChange }) => {\r\n    return (\r\n        <input\r\n            className={s.inputFilter}\r\n            value={value}\r\n            onChange={handleChange}\r\n            placeholder=\"Search...\"\r\n        />\r\n    )\r\n}\r\n\r\nexport default InputFilter;","import React from 'react';\r\nimport { CaretDownOutlined, CaretUpOutlined } from '@ant-design/icons';\r\nimport s from './TableHead.module.css';\r\n\r\nconst TableHead = (props) => {\r\n\r\n    const { columns, handleClick, currentSort, order } = props;\r\n\r\n    const tableHeadWidth = `${100 / columns.length}%`\r\n\r\n    return (\r\n        <thead>\r\n            <tr>\r\n                {columns.map((item, i) => {\r\n                    return <th\r\n                        className={s.tableHeadCell}\r\n                        style={{ width: tableHeadWidth }}\r\n                        key={i}\r\n                        onClick={() => {\r\n                            handleClick(item);\r\n                        }}\r\n                    >\r\n                        {item} <span>\r\n                            {currentSort === item ?\r\n                                order ? <CaretUpOutlined /> : <CaretDownOutlined />\r\n                                : \"\"\r\n                            }\r\n                        </span>\r\n                    </th>\r\n                })}\r\n            </tr>\r\n        </thead>\r\n    )\r\n}\r\n\r\nexport default TableHead","import React from 'react';\r\nimport s from './TableRow.module.css';\r\n\r\nconst TableRow = ({ data }) => {\r\n    return <tr>\r\n        {\r\n            Object.keys(data).map(key => {\r\n                return (<td className={s.tableCell} key={key}>{data[key]}</td>)\r\n            })\r\n        }\r\n    </tr>;\r\n}\r\n\r\n\r\nexport default TableRow","import React from 'react';\r\nimport TableRow from './TableRow';\r\n\r\n\r\nconst TableBody = ({ content }) => {\r\n\r\n    return (\r\n        <tbody>\r\n            {\r\n                content.map(item => <TableRow key={item.id} data={item} />)\r\n            }\r\n        </tbody>\r\n    )\r\n}\r\n\r\nexport default TableBody","import React from 'react';\r\nimport TableHead from './TableHead/TableHead';\r\nimport TableBody from './TableBody/TableBody';\r\nimport s from './Table.module.css';\r\n\r\nconst Table = (props) => {\r\n\r\n    const {\r\n        head,\r\n        handleClick,\r\n        data,\r\n        currentSort,\r\n        order\r\n    } = props;\r\n\r\n    return (\r\n        <div className={s.tableContainer}>\r\n            <table className={s.table}>\r\n                <TableHead\r\n                    columns={head}\r\n                    handleClick={handleClick}\r\n                    currentSort={currentSort}\r\n                    order={order}\r\n                />\r\n                <TableBody content={data} />\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table;","import React, { useState, useEffect } from 'react';\r\nimport ButtonPanel from './ButtonPanel/ButtonPanel';\r\nimport InputFilter from './InputFilter/InputFilter';\r\nimport Table from './Table/Table';\r\nimport s from './App.module.css';\r\n\r\nconst App = ({ data }) => {\r\n\r\n    const [height, setHeight] = useState(window.innerHeight);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', () => {\r\n            setHeight(prevHeight => {\r\n                if (Math.abs(prevHeight - window.innerHeight) > 20) {\r\n                    return window.innerHeight\r\n                }\r\n                return prevHeight;\r\n            })\r\n        })\r\n    }, []);\r\n\r\n\r\n    const [sortBy, setSortBy] = useState(\"id\");\r\n    const [order, setOrder] = useState(false);\r\n\r\n    const handleSort = (item) => {\r\n\r\n        setSortBy(prevItem => {\r\n\r\n            if (prevItem === item) {\r\n                setOrder(prevOrder => !prevOrder);\r\n            } else {\r\n                setOrder(false)\r\n            }\r\n            return item;\r\n        });\r\n    }\r\n\r\n    const [filter, setFilter] = useState(\"\");\r\n    const handleFilter = event => {\r\n        setFilter(event.target.value);\r\n    }\r\n\r\n    const [page, setPage] = useState(1);\r\n    const handlePagination = page => {\r\n        setPage(prevPage => {\r\n            return page;\r\n        })\r\n    }\r\n\r\n\r\n    // Сортировка по столбцу\r\n    const sortedData = [...data].sort((item1, item2) => {\r\n        switch (item1[sortBy] > item2[sortBy]) {\r\n            case true:\r\n                return order ? -1 : 1\r\n            case false:\r\n                return order ? 1 : -1\r\n        }\r\n    })\r\n\r\n    //Фильтрация по значению инпута\r\n    const filteredData = sortedData.filter(item => {\r\n        return Object.values(item)\r\n            .join()\r\n            .toLowerCase()\r\n            .includes(filter.toLowerCase())\r\n    })\r\n\r\n    // Примерная высота header+input\r\n    const headerHeight = height * 0.06;\r\n\r\n    // Примерная высота кнопок пагинации\r\n    const buttonsPanelHeight = height * 0.05;\r\n\r\n    // Примерное количество строчек в таблице \r\n    const rowsPerPage = Math.floor((height - headerHeight - buttonsPanelHeight - 36) / 30);\r\n\r\n\r\n    // Отображаемые на текущей странице записи\r\n    const visibleData = filteredData.slice((page - 1) * rowsPerPage, page * rowsPerPage);\r\n\r\n    const totalPages = Math.ceil(filteredData.length / rowsPerPage);\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <header className={s.header}>\r\n                <InputFilter value={filter} handleChange={handleFilter} />\r\n            </header>\r\n            <Table\r\n                head={Object.keys(data[0])}\r\n                handleClick={handleSort}\r\n                currentSort={sortBy}\r\n                order={order}\r\n                data={visibleData}\r\n            />\r\n            <ButtonPanel\r\n                currentPage={page}\r\n                totalPages={totalPages}\r\n                handleClick={handlePagination}\r\n            />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport dataArray from './data';\r\nimport App from './Components/App';\r\n\r\nReactDOM.render(<App data={dataArray} />, document.getElementById('root'))"],"sourceRoot":""}